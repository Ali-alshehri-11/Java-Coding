package Mar2021Leetcode;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Queue;

public class _0924MinimizeMalwareSpread {

	public static void main(String[] args) {
		System.out.println(
				minMalwareSpread(new int[][] { new int[] { 1, 1, 0 }, new int[] { 1, 1, 0 }, new int[] { 0, 0, 1 } },
						new int[] { 0, 1 }));

		System.out.println(
				minMalwareSpread(new int[][] { new int[] { 1, 0, 0 }, new int[] { 0, 1, 0 }, new int[] { 0, 0, 1 } },
						new int[] { 0, 2 }));

		System.out.println(
				minMalwareSpread(new int[][] { new int[] { 1, 1, 1 }, new int[] { 1, 1, 1 }, new int[] { 1, 1, 1 } },
						new int[] { 1, 2 }));

		System.out.println(
				minMalwareSpread(new int[][] { new int[] { 1, 1, 0 }, new int[] { 1, 1, 1 }, new int[] { 0, 1, 1 } },
						new int[] { 0, 1 }));
	}

	public static int minMalwareSpread(int[][] graph, int[] initial) {
		
	}

}
